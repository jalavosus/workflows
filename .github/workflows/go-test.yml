name: Run Tests

on:
  workflow_call:
    inputs:
      command:
        type:        string
        required:    false
        default:     "go test ./..."
        description: "Command to run tests"


jobs:
  prebuild:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - id: push_commit_msg
        if: github.event_name == 'push'
        run: echo ::set-output name=push_msg::$(git log --format=%B -n 1 HEAD)

      - id: pull_commit_msg
        if: github.event_name == 'pull_request'
        run: echo ::set-output name=pull_msg::$(git log --format=%B -n 1 HEAD^2)

    outputs:
      commit_msg: $( [ -z "${{ steps.pull_commit_msg.outputs.pull_msg }}" ] && echo "${{ steps.push_commit_msg.outputs.push_msg }}" || echo "${{ steps.pull_commit_msg.outputs.pull_msg }}" )

  test:
    needs:
      - prebuild

    strategy:
      matrix:
        go-version:
          - 1.18.x
          - 1.19.x
        platform:
          - ubuntu-latest

    runs-on: ${{ matrix.platform }}

    if: ${{ !contains(needs.prebuild.outputs.commit_msg, '[ci notest]') }}

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}

      - uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go${{ matrix.go-version }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go${{ matrix.go-version }}-

      - run: go mod download

      - name: Run tests
        run: ${{ inputs.command }}